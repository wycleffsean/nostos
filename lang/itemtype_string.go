// Code generated by "stringer -type=itemType"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[itemUndefined-0]
	_ = x[itemError-1]
	_ = x[itemDot-2]
	_ = x[itemDocStart-3]
	_ = x[itemDocEnd-4]
	_ = x[itemEOF-5]
	_ = x[itemList-6]
	_ = x[itemColon-7]
	_ = x[itemArrow-8]
	_ = x[itemShovel-9]
	_ = x[itemLeftParen-10]
	_ = x[itemRightParen-11]
	_ = x[itemNumber-12]
	_ = x[itemString-13]
	_ = x[itemPath-14]
	_ = x[itemSymbol-15]
}

const _itemType_name = "itemUndefineditemErroritemDotitemDocStartitemDocEnditemEOFitemListitemColonitemArrowitemShovelitemLeftParenitemRightParenitemNumberitemStringitemPathitemSymbol"

var _itemType_index = [...]uint8{0, 13, 22, 29, 41, 51, 58, 66, 75, 84, 94, 107, 121, 131, 141, 149, 159}

func (i itemType) String() string {
	if i < 0 || i >= itemType(len(_itemType_index)-1) {
		return "itemType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _itemType_name[_itemType_index[i]:_itemType_index[i+1]]
}
